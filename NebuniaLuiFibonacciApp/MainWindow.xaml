<Window x:Class="NebuniaLuiFibonacci.MainWindow"
        x:Name="ResWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NebuniaLuiFibonacci"
        xmlns:core="clr-namespace:NebuniaLuiFibonacci.Core;assembly=NebuniaLuiFibonacci"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        mc:Ignorable="d"
        Title="Fibonacci App" Height="450" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/Generic.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <!--These 2 templates are basic, but they will eventually contain different sets of actions -->
            <DataTemplate x:Key="RunningTaskActions">
                <Button Command="{Binding StopWorkerCommand, ElementName=ResWindow}" CommandParameter="{Binding}">Stop Task</Button>
            </DataTemplate>
            <DataTemplate x:Key="UnactivatedTaskActions">
                <Button Command="{Binding StartWorkerCommand, ElementName=ResWindow}" CommandParameter="{Binding}">Start Task</Button>
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <StackPanel Orientation="Vertical" Width="Auto">
            <DataGrid ItemsSource="{Binding FibonacciRequests,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                  AutoGenerateColumns="False" MaxHeight="275" Width="520" >
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status}" Value="{x:Static core:ProcessorState.WaitingForActivation}">
                                <Setter Property="Background" Value="LightYellow" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status}" Value="{x:Static core:ProcessorState.Running}">
                                <Setter Property="Background" Value="LightSkyBlue" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
                
                <DataGrid.Columns>
                    <DataGridTemplateColumn Header="Penultimate Term" Width="*"  IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Process.PenultimateTerm}" IsEnabled="False"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Last Term" Width="*"  IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Process.LastTerm}" IsEnabled="False" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Original First Term" Width="*"  IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Process.OriginalFirstTerm}" IsEnabled="False" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Original Second Term" Width="*"  IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Process.OriginalSecondTerm}" IsEnabled="False" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Header="Actions" Width="100" IsReadOnly="True">
                        <DataGridTemplateColumn.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Status}" Value="{x:Static core:ProcessorState.Running}">
                                        <Setter Property="ContentTemplate" Value="{StaticResource RunningTaskActions}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Status}" Value="{x:Static core:ProcessorState.WaitingForActivation}">
                                        <Setter Property="ContentTemplate" Value="{StaticResource UnactivatedTaskActions}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTemplateColumn.CellStyle>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </StackPanel>
    </Grid>
</Window>
